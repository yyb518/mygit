t7187.scala:8: error: _ must follow method; cannot follow () => String
  val t1f: Any       = foo() _ // error: _ must follow method
                          ^
t7187.scala:11: error: type mismatch;
 found   : String
 required: () => Any
  val t2a: () => Any = bar   // error: no eta-expansion of zero-arglist-methods
                       ^
t7187.scala:12: error: not enough arguments for method apply: (i: Int)Char in class StringOps.
Unspecified value parameter i.
  val t2b: () => Any = bar() // error: bar doesn't take arguments, so expanded to bar.apply(), which misses an argument
                          ^
t7187.scala:15: error: not enough arguments for method apply: (i: Int)Char in class StringOps.
Unspecified value parameter i.
  val t2e: Any       = bar() _ // error: not enough arguments for method apply
                          ^
t7187.scala:18: error: type mismatch;
 found   : String
 required: () => Any
  val t3a: () => Any = baz   // eta-expansion (deprecated) in 2.12, error in 2.13
                       ^
t7187.scala:21: error: _ must follow method; cannot follow String
  val t3d: Any       = baz() _ // error: _ must follow method
                          ^
t7187.scala:24: error: type mismatch;
 found   : String
 required: () => Any
  val t4a: () => Any = zap     // eta-expansion (deprecated) in 2.12, error in 2.13
                       ^
t7187.scala:25: error: type mismatch;
 found   : String
 required: () => Any
  val t4b: () => Any = zap()   // ditto
                          ^
t7187.scala:30: error: missing argument list for method zup in class EtaExpandZeroArg
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `zup _` or `zup(_)` instead of `zup`.
  val t5a = zup // error in 2.13, eta-expansion in 2.14
            ^
9 errors found
